#
# Patrick Hammer's i3wm config
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#

# ALT key
#set $mod Mod1

# Windows Key
set $win Mod4
set $mod Mod1+Control+Mod4
set $mod Mod4

# These are cool but I don't like them because they can't be shifted.
set $hyper Shift+Mod4+Mod1+Ctrl
set $meh Shift+Mod1+Ctrl

# font for window titles. ISO 10646 = Unicode
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#font 
set $FONT "pango:DejaVu Sans Mono 7"
set $FONT "pango:Noto Mono 7"
font $FONT

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# doesn't quite work
# bindsym --whole-window button8 [class="gnome-terminal"] exec insert-cycledleft
# bindsym --whole-window button9 [class="gnome-terminal"] exec insert-cycledright

bindsym $mod+button3 floating toggle

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

bindsym button9 move left
bindsym button8 move right

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+Q kill
bindsym button2 kill
bindsym --release $mod+x exec xkill

# start dmenu (a program launcher)
#bindsym $win+d exec dmenu_run
bindsym $mod+d exec dmenu_run -fn "DejaVu Sans Mono-10"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -fn 'DejaVu Sans Mono-10'"

# change focus
# inspired by http://pushl.net/blog/18/
bindsym $mod+Left exec "~/bin/move-cursor-window-center.sh focus left"
bindsym $mod+Down exec "~/bin/move-cursor-window-center.sh focus down"
bindsym $mod+Up exec "~/bin/move-cursor-window-center.sh focus up"
bindsym $mod+Right exec "~/bin/move-cursor-window-center.sh focus right"

bindsym $mod+$left exec "~/bin/move-cursor-window-center.sh focus left"
bindsym $mod+$down exec "~/bin/move-cursor-window-center.sh focus down"
bindsym $mod+$up exec "~/bin/move-cursor-window-center.sh focus up"
bindsym $mod+$right exec "~/bin/move-cursor-window-center.sh focus right"

# move focused window
bindsym $mod+Shift+Left exec "~/bin/move-cursor-window-center.sh move left 60px"
bindsym $mod+Shift+Down exec "~/bin/move-cursor-window-center.sh move down 60px"
bindsym $mod+Shift+Up exec "~/bin/move-cursor-window-center.sh move up 60px"
bindsym $mod+Shift+Right exec "~/bin/move-cursor-window-center.sh move right 60px"

bindsym $mod+Shift+$left exec "~/bin/move-cursor-window-center.sh move left 60px"
bindsym $mod+Shift+$down exec "~/bin/move-cursor-window-center.sh move down 60px"
bindsym $mod+Shift+$up exec "~/bin/move-cursor-window-center.sh move up 60px"
bindsym $mod+Shift+$right exec "~/bin/move-cursor-window-center.sh move right 60px"

# Move floating window to dead center
bindsym $mod+c move absolute position center

# split in horizontal orientation
bindsym $mod+v split h
# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
#bindsym $mod+f fullscreen
bindsym $mod+f fullscreen global

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Change container layout (stacked, tabbed, default)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+e layout default
bindsym $mod+e layout toggle
bindsym $mod+q layout toggle split

# toggle tiling / floating
bindsym $mod+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle

# focus the parent container
bindsym $mod+a        focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# rename the current workspace, start with a number or else, TODO: automatically add a number
bindsym $mod+t exec i3-input -F 'rename workspace to "%s"' -P 'New name for this workspace: '

# customize workspace names
set $WS1 number 1: a
set $WS2 number 2: s
set $WS3 number 3: d
set $WS4 number 4: f
set $WS5 number 5: g
set $WS6 number 6
set $WS7 number 7
set $WS8 number 8
set $WS9 number 9
set $WS10 number 10

# switch to workspace
#bindsym $mod+1 workspace $WS1
bindsym $mod+1 exec "~/bin/move-cursor-window-center.sh workspace $WS1"
bindsym $mod+2 exec "~/bin/move-cursor-window-center.sh workspace $WS2"
bindsym $mod+3 exec "~/bin/move-cursor-window-center.sh workspace $WS3"
bindsym $mod+4 exec "~/bin/move-cursor-window-center.sh workspace $WS4"
bindsym $mod+5 exec "~/bin/move-cursor-window-center.sh workspace $WS5"
bindsym $mod+6 exec "~/bin/move-cursor-window-center.sh workspace $WS6"
bindsym $mod+7 exec "~/bin/move-cursor-window-center.sh workspace $WS7"
bindsym $mod+8 exec "~/bin/move-cursor-window-center.sh workspace $WS8"
bindsym $mod+9 exec "~/bin/move-cursor-window-center.sh workspace $WS9"
bindsym $mod+0 exec "~/bin/move-cursor-window-center.sh workspace $WS10"

# move focused container to workspace                                                                                                                                                          
bindsym $mod+Shift+1 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS1"
bindsym $mod+Shift+2 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS2"
bindsym $mod+Shift+3 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS3"
bindsym $mod+Shift+4 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS4"
bindsym $mod+Shift+5 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS5"
bindsym $mod+Shift+6 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS6"
bindsym $mod+Shift+7 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS7"
bindsym $mod+Shift+8 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS8"
bindsym $mod+Shift+9 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS9"
bindsym $mod+Shift+0 exec "~/bin/move-cursor-window-center.sh move container to workspace $WS10"

bindsym $mod+bracketleft exec "~/bin/move-cursor-window-center.sh workspace prev"
bindsym	$mod+bracketright exec "~/bin/move-cursor-window-center.sh workspace next" 

# Move workspace to specific screen
#workspace $WS1 output DP-2.8
#workspace $WS2 output DP-0
#workspace $WS3 output DP-4
#workspace $WS4 output DP-6
#bindsym $mod+F1 move workspace to output DP-2
#bindsym $mod+F2 move workspace to output DP-0
#bindsym $mod+Control+Tab move workspace to output right

# reload the configuration file
bindsym $mod+Shift+C reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+R restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym $right      resize shrink width 10 px or 10 ppt
        bindsym $up         resize grow height 10 px or 10 ppt
        bindsym $down       resize shrink height 10 px or 10 ppt
        bindsym $left       resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Right       resize shrink width 10 px or 10 ppt
        bindsym Up          resize grow height 10 px or 10 ppt
        bindsym Down        resize shrink height 10 px or 10 ppt
        bindsym Left        resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or Mod1+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
	}

bindsym $mod+r mode "resize"

mode "focused" {

                # hardcoded focus keybindings
                bindsym i [class="(?i)firefox"] focus
                bindsym h [class="(?i)hipchat"] focus
                bindsym u [class="(?i)slack"] focus
                bindsym f [class="(?i)terminal" title="mc"] focus

                # keybindings for marking and jumping to clients
		# bindsym a exec i3-input -F 'mark %s' -P 'Mark name: '
                # bindsym g exec i3-input -F '[con_mark=%s] focus' -P 'Go to mark: '
		bindsym a exec ~/bin/mark
		bindsym g exec ~/bin/goto -l 10
		bindsym u exec ~/bin/unmark

                # Assign marks to keys 1-5
                bindsym Shift+1 mark mark1
                bindsym Shift+2 mark mark2
                bindsym Shift+3 mark mark3
                bindsym Shift+4 mark mark4
                bindsym Shift+5 mark mark5

                # Jump to clients marked 1-5
                bindsym 1 [con_mark="mark1"] focus
                bindsym 2 [con_mark="mark2"] focus
                bindsym 3 [con_mark="mark3"] focus
                bindsym 4 [con_mark="mark4"] focus
                bindsym 5 [con_mark="mark5"] focus

                # Exit to the default mode
                bindsym Return mode "default"
                bindsym Escape mode "default"
		bindsym $mod+n mode "default"
}

bindsym $mod+n mode "focused"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    colors {
        background #000000
	statusline #ffffff
	separator #666666
        
        focused_workspace  #69306d #C55ACC #ffffff
	active_workspace   #333333 #5f676a #ffffff
	inactive_workspace #333333 #222222 #888888
	urgent_workspace   #2f343a #900000 #ffffff
	binding_mode       #2f343a #900000 #ffffff
    }

    	font $FONT
        status_command py3status -c ~/.config/i3/i3status.conf

	#output DP-0
	#output DP-4
        #mode hide
        #hidden_state hide
        #modifier $mod
}

#Startup stuff
#exec synapse #searcher
exec nm-applet
exec pasystray
exec caffeine-indicator
exec indicator-cpufreq
#exec synergys -c /home/phammer/.synergy.conf --enable-crypto
exec gsettings set org.gnome.desktop.background show-desktop-icons false #prevents desktop from showing
#exec parcellite #clipboard manager
#exec clipit #clipboard manager what is usefull with xterm

exec_always xinput --set-prop 'pointer:Logitech MX Ergo' 'libinput Accel Speed' 1 # update for device $xinput list
exec_always xset m 6 10 # set mouse acceleration first number is acceleration, second is threshold in px/10ms
#exec gio mount -d /dev/sdb3 # tell nautalus to mount my storage drive automatically
#exec gio mount -d /dev/sda1 # tell nautalus to mount my storage drive automatically
exec barrier -c ~/Documents/barrier # replacemnt for synergy
#exec desktop.sh # script to call xrandr TODO: try ARandR
exec_always --no-startup-id /home/hammer/.local/bin/autotiling # pip install autotiling https://github.com/nwg-piotr/autotiling


# ROFI https://davedavenport.github.io/rofi/
#bindsym $mod+r exec "rofi -modi 'window,drun,ssh' -show ssh"
#bindsym $mod+q exec "rofi -modi 'window,drun,ssh' -show window"
#bindsym $mod+d exec "rofi -show combi -combi-modi 'run,drun' -modi 'combi,drun,window,ssh'"


# logitech mouse notifications
#exec solaar

for_window [class="^Google Play Music$"] floating enable
for_window [class="ShowEngineCli"] floating enable
for_window [title="Popout for YouTube*"] floating enable, sticky enable, move position 50 1900, border pixel 1

# move spotify to scratchpad and recall to anywhere with mod j
#for_window [class="^Spotify$"] floating enable, move scratchpad
#bindsym $mod+j [title="^Spotify*"] scratchpad show

# Volume Binding
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%-
bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master 1+ toggle
# XF86AudioPlay
# XF86AudioStop
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPrev exec --no-startup-id playerctl previous
bindsym XF86AudioNext exec --no-startup-id playerctl next

# spawn pavucontrol at the mouse
for_window [class="(?i)pavucontrol"] floating enable, move position mouse

# Control Spotify with dbus controller
# https://github.com/acrisci/playerctl - there's a deb to install
bindsym Shift+F4 exec --no-startup-id playerctl previous
bindsym Shift+F5 exec --no-startup-id playerctl play-pause
#bindsym $mod+Shift+F7 exec --no-startup-id playerctl -p spotify play-pause
bindsym Shift+F6 exec --no-startup-id playerctl next

#Lock the screen
#bindsym $mod+Home exec --no-startup-id blur_lock.sh
bindsym $mod+Home exec --no-startup-id i3lock -c 000000
bindsym $mod+End exec (sleep 0.2 && systemctl suspend && i3lock -c 000000 ) &
#bindsym $mod+Home exec --no-startup-id gnome-screensaver-command -l

#Autolock after inactivity
#exec --no-startup-id xautolock -time 5 -locker 'blur_lock.sh' &
exec --no-startup-id xautolock -time 5 -locker 'i3lock -d -c 000000' &

#Snap to a program similar to windows 1, 2, 3...
#bindsym $mod+i exec ~/bin/find_or_start.sh chrome
bindsym $mod+i exec ~/bin/find_or_start.sh firefox # -P home --new-tab about:newtab
#bindsym $mod+Shift+i exec /opt/google/chrome/google-chrome --profile-directory="Profile 1"
#bindsym $mod+Shift+i exec firefox -P work --new-tab about:newtab
bindsym $mod+o exec ~/bin/find_or_start.sh slack
bindsym $mod+u exec ~/bin/find_or_start.sh remmina
#bindsym $mod+u exec python ~/bin/nextmatch.py @disney.com # my email!

bindsym $mod+y exec ~/bin/find_or_start.sh spotify
bindsym $hyper+m exec python ~/bin/nextmatch.py Messages
bindsym $mod+p exec python ~/bin/nextmatch.py zoom
bindsym $hyper+t exec firefox  https://messages.google.com/web/
#bindsym $mod+Shift+p exec /opt/google/chrome/google-chrome --profile-directory=Default --app-id=nngjipgjhfkaeimbhgmodlbhligdflei


#Enable alt tab back and forth
workspace_auto_back_and_forth yes
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth

#for_Window [Class="^Pidgin$" Window_Role="^Conversation$"] Resize Grow Width 0 px or 30 ppt
#for_window [class="^Google-chrome$" window_role="^pop-up$"] floating enable, move position mouse,  border none
for_window [title="Hangouts"] floating enable, move position mouse
for_window [title="ksnip"] floating enable, move position center
for_window [title="Messages for web"] floating enable, sticky enable, move position mouse, resize set 1000 700
for_window [title="Popout for YouTube*"] floating enable, sticky enable, move position 50 1900, border pixel 1
for_window [title="Picture-in-Picture"] floating enable, sticky enable, move position 50 1900, border pixel 1
#for_window [role="pop-up"] floating enabled, move position mouse

# Toggle stickey, makes floating window appear on all workspaces
bindsym $mod+Shift+s sticky toggle

#New terminal here - enabled by the dirpersist oh-my-zsh plugin
bindsym $mod+Shift+Return exec gnome-terminal --working-directory=$(head -n 1 ~/.zdirs)
#bindsym $mod+Shift+Return exec gnome-terminal --working-directory=$(xcwd)
bindsym Shift+$mod+n exec finder.sh

set $uf #2F343F
set $hl #5294E2

client.focused          #69306D #A5668B #FFFFFF #69306D   #69306D
client.unfocused	#0E103D #0B0C2F #C3C3C3 #0E103D   #0B0C2F
client.focused_inactive #0E103D #D3BCC0 #0B0C2F #0E103D   #222222
client.urgent           #69306D #C55ACC #FFFFFF #69306D   #C55ACC
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

client.background       #FFFFFF

# title bar with 5 px border, use pixel 5 to disable title bar
default_border normal 5
hide_edge_borders none

# set background color of root window rather than stock ubuntu image
exec --no-startup-id xsetroot -solid "#333333"

# Screen shots
# scrot & gpaint
bindsym $mod+Print exec import
#bindsym Print --release exec "scrot -s -e 'mv $f /tmp/ && gthumb /tmp/$f; xclip -selection clipboard -t image/png -i /tmp/$f'"
bindsym Print --release exec ksnip -r

# bindsym Print exec gnome-screenshot --interactive

#brightness
#bindcode [--release] 224 exec  xbacklight -dec 25
#bindcode [--release] 225 exec  xbacklight -inc 25
#bindsym XF86MonBrightnessUp exec xbacklight -inc 25
#bindsym XF86MonBrightnessDown exec xbacklight -dec 25

# Clipboard Mgmgt
#bindsym Shift+Ctrl+v exec copyq menu
exec copyq
bindsym Shift+Ctrl+c exec clip.zsh
#bindsym Shift+Ctrl+c exec copyq toggle
for_window [class="(?i)CopyQ"] floating enable, move position mouse

# Initiate the comms workspace
exec --no-startup-id "/home/hammer/.config/i3/comms.sh"

# fun unicode character typing, similar to mac typing special chars I love
bindsym --release mod1+minus exec xdotool key --clearmodifiers U2014 # em dash —
bindsym --release Shift+mod1+1 exec xdotool key --clearmodifiers U203d # exclaim question ‽
bindsym --release Shift+mod1+r exec xdotool key --clearmodifiers U2622 # radiation ☢
bindsym --release Shift+mod1+x exec xdotool key --clearmodifiers U2620 # skull and cross ☠
bindsym --release Shift+mod1+b exec xdotool key --clearmodifiers U2623 # biohazard ☣
bindsym --release Shift+mod1+j exec xdotool key --clearmodifiers U2615 # java ☕
bindsym --release Shift+mod1+h exec xdotool key --clearmodifiers U261e # hand pointing ☞
bindsym --release Shift+mod1+plus  exec xdotool key --clearmodifiers U2248 # approx equals ≈
bindsym --release Shift+mod1+minus exec xdotool key --clearmodifiers U00B1 # ±
bindsym --release Shift+mod1+8 exec xdotool key --clearmodifiers U00B0 # °degrees°

bindsym	Shift+mod1+e exec emoji-menu # https://github.com/jchook/emoji-menu

# exec xcape -t 300 -e 'Shift_L=parenleft;Shift_R=parenright;Control_L=Tab'

# MouseKeys Setup: use the numpad keys to drive the mouse pointer around and click on stuff!
# Activate with shift+numlock
# Documentation https://www.x.org/releases/X11R7.7/doc/kbproto/xkbproto.html
# exec_always setxkbmap -option keypad:pointerkeys
# exec_always xkbset m # enable mousekeys
# exec_always xkbset ma 1 5 130 140 800

#   [-]{mousekeysaccel | ma} [mk-delay> <mk_interval> <mk_time_to_max mk-max_speed> <mk_curve] , use xkbset-gui
     

#bindsym $hyper+Up exec xdotool click  --repeat 6 --delay 5 4 #scroll up and down                                          
#bindsym $hyper+Down exec xdotool click  --repeat 6 --delay 5 5
#bindsym $hyper+l exec xdotool click  --repeat 6 --delay 5 6
#bindsym $hyper+r exec xdotool click  --repeat 6 --delay 5 7
# bindsym $hyper+6 exec xdotool click 9 # forward hisotory                    
# bindsym $hyper+n exec xdotool click 8 # back history							
#bindsym $hyper+S exec xdotool click 3 # right click
#bindsym $hyper+M exec xkbset m && ~/bin/move-cursor-window-center.sh
#exec keynav # https://github.com/jordansissel/keynav handy mouse move with keyboard

#bindsym --release $mod+g exec /home/hammer/code/utils/i3-hud-menu/i3-hud-menu.py
bindsym --release $mod+g exec /home/hammer/code/utils/i3-hud-menu/HUD.py
